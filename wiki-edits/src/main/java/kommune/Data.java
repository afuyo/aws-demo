/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package kommune;

import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Data extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -2495940180974897638L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Data\",\"namespace\":\"kommune\",\"fields\":[{\"name\":\"KOMMUNE_KODE\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"KOMMUNE_NAVN\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"KOMMUNE_SOEGENAVN\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"FRA_DATO\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"UDGAAET_DATO\",\"type\":[\"null\",\"string\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public CharSequence KOMMUNE_KODE;
  @Deprecated public CharSequence KOMMUNE_NAVN;
  @Deprecated public CharSequence KOMMUNE_SOEGENAVN;
  @Deprecated public CharSequence FRA_DATO;
  @Deprecated public CharSequence UDGAAET_DATO;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Data() {}

  /**
   * All-args constructor.
   * @param KOMMUNE_KODE The new value for KOMMUNE_KODE
   * @param KOMMUNE_NAVN The new value for KOMMUNE_NAVN
   * @param KOMMUNE_SOEGENAVN The new value for KOMMUNE_SOEGENAVN
   * @param FRA_DATO The new value for FRA_DATO
   * @param UDGAAET_DATO The new value for UDGAAET_DATO
   */
  public Data(CharSequence KOMMUNE_KODE, CharSequence KOMMUNE_NAVN, CharSequence KOMMUNE_SOEGENAVN, CharSequence FRA_DATO, CharSequence UDGAAET_DATO) {
    this.KOMMUNE_KODE = KOMMUNE_KODE;
    this.KOMMUNE_NAVN = KOMMUNE_NAVN;
    this.KOMMUNE_SOEGENAVN = KOMMUNE_SOEGENAVN;
    this.FRA_DATO = FRA_DATO;
    this.UDGAAET_DATO = UDGAAET_DATO;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public Object get(int field$) {
    switch (field$) {
    case 0: return KOMMUNE_KODE;
    case 1: return KOMMUNE_NAVN;
    case 2: return KOMMUNE_SOEGENAVN;
    case 3: return FRA_DATO;
    case 4: return UDGAAET_DATO;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, Object value$) {
    switch (field$) {
    case 0: KOMMUNE_KODE = (CharSequence)value$; break;
    case 1: KOMMUNE_NAVN = (CharSequence)value$; break;
    case 2: KOMMUNE_SOEGENAVN = (CharSequence)value$; break;
    case 3: FRA_DATO = (CharSequence)value$; break;
    case 4: UDGAAET_DATO = (CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'KOMMUNE_KODE' field.
   * @return The value of the 'KOMMUNE_KODE' field.
   */
  public CharSequence getKOMMUNEKODE() {
    return KOMMUNE_KODE;
  }
  public String getKOMMUNEKODEString() {
    return KOMMUNE_KODE.toString();
  }

  /**
   * Sets the value of the 'KOMMUNE_KODE' field.
   * @param value the value to set.
   */
  public void setKOMMUNEKODE(CharSequence value) {
    this.KOMMUNE_KODE = value;
  }

  /**
   * Gets the value of the 'KOMMUNE_NAVN' field.
   * @return The value of the 'KOMMUNE_NAVN' field.
   */
  public CharSequence getKOMMUNENAVN() {
    return KOMMUNE_NAVN;
  }

  /**
   * Sets the value of the 'KOMMUNE_NAVN' field.
   * @param value the value to set.
   */
  public void setKOMMUNENAVN(CharSequence value) {
    this.KOMMUNE_NAVN = value;
  }

  /**
   * Gets the value of the 'KOMMUNE_SOEGENAVN' field.
   * @return The value of the 'KOMMUNE_SOEGENAVN' field.
   */
  public CharSequence getKOMMUNESOEGENAVN() {
    return KOMMUNE_SOEGENAVN;
  }

  /**
   * Sets the value of the 'KOMMUNE_SOEGENAVN' field.
   * @param value the value to set.
   */
  public void setKOMMUNESOEGENAVN(CharSequence value) {
    this.KOMMUNE_SOEGENAVN = value;
  }

  /**
   * Gets the value of the 'FRA_DATO' field.
   * @return The value of the 'FRA_DATO' field.
   */
  public CharSequence getFRADATO() {
    return FRA_DATO;
  }

  /**
   * Sets the value of the 'FRA_DATO' field.
   * @param value the value to set.
   */
  public void setFRADATO(CharSequence value) {
    this.FRA_DATO = value;
  }

  /**
   * Gets the value of the 'UDGAAET_DATO' field.
   * @return The value of the 'UDGAAET_DATO' field.
   */
  public CharSequence getUDGAAETDATO() {
    return UDGAAET_DATO;
  }

  /**
   * Sets the value of the 'UDGAAET_DATO' field.
   * @param value the value to set.
   */
  public void setUDGAAETDATO(CharSequence value) {
    this.UDGAAET_DATO = value;
  }

  /**
   * Creates a new Data RecordBuilder.
   * @return A new Data RecordBuilder
   */
  public static Builder newBuilder() {
    return new Builder();
  }

  /**
   * Creates a new Data RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Data RecordBuilder
   */
  public static Builder newBuilder(Builder other) {
    return new Builder(other);
  }

  /**
   * Creates a new Data RecordBuilder by copying an existing Data instance.
   * @param other The existing instance to copy.
   * @return A new Data RecordBuilder
   */
  public static Builder newBuilder(Data other) {
    return new Builder(other);
  }

  /**
   * RecordBuilder for Data instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Data>
    implements org.apache.avro.data.RecordBuilder<Data> {

    private CharSequence KOMMUNE_KODE;
    private CharSequence KOMMUNE_NAVN;
    private CharSequence KOMMUNE_SOEGENAVN;
    private CharSequence FRA_DATO;
    private CharSequence UDGAAET_DATO;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.KOMMUNE_KODE)) {
        this.KOMMUNE_KODE = data().deepCopy(fields()[0].schema(), other.KOMMUNE_KODE);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.KOMMUNE_NAVN)) {
        this.KOMMUNE_NAVN = data().deepCopy(fields()[1].schema(), other.KOMMUNE_NAVN);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.KOMMUNE_SOEGENAVN)) {
        this.KOMMUNE_SOEGENAVN = data().deepCopy(fields()[2].schema(), other.KOMMUNE_SOEGENAVN);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.FRA_DATO)) {
        this.FRA_DATO = data().deepCopy(fields()[3].schema(), other.FRA_DATO);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.UDGAAET_DATO)) {
        this.UDGAAET_DATO = data().deepCopy(fields()[4].schema(), other.UDGAAET_DATO);
        fieldSetFlags()[4] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Data instance
     * @param other The existing instance to copy.
     */
    private Builder(Data other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.KOMMUNE_KODE)) {
        this.KOMMUNE_KODE = data().deepCopy(fields()[0].schema(), other.KOMMUNE_KODE);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.KOMMUNE_NAVN)) {
        this.KOMMUNE_NAVN = data().deepCopy(fields()[1].schema(), other.KOMMUNE_NAVN);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.KOMMUNE_SOEGENAVN)) {
        this.KOMMUNE_SOEGENAVN = data().deepCopy(fields()[2].schema(), other.KOMMUNE_SOEGENAVN);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.FRA_DATO)) {
        this.FRA_DATO = data().deepCopy(fields()[3].schema(), other.FRA_DATO);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.UDGAAET_DATO)) {
        this.UDGAAET_DATO = data().deepCopy(fields()[4].schema(), other.UDGAAET_DATO);
        fieldSetFlags()[4] = true;
      }
    }

    /**
      * Gets the value of the 'KOMMUNE_KODE' field.
      * @return The value.
      */
    public CharSequence getKOMMUNEKODE() {
      return KOMMUNE_KODE;
    }

    /**
      * Sets the value of the 'KOMMUNE_KODE' field.
      * @param value The value of 'KOMMUNE_KODE'.
      * @return This builder.
      */
    public Builder setKOMMUNEKODE(CharSequence value) {
      validate(fields()[0], value);
      this.KOMMUNE_KODE = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'KOMMUNE_KODE' field has been set.
      * @return True if the 'KOMMUNE_KODE' field has been set, false otherwise.
      */
    public boolean hasKOMMUNEKODE() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'KOMMUNE_KODE' field.
      * @return This builder.
      */
    public Builder clearKOMMUNEKODE() {
      KOMMUNE_KODE = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'KOMMUNE_NAVN' field.
      * @return The value.
      */
    public CharSequence getKOMMUNENAVN() {
      return KOMMUNE_NAVN;
    }

    /**
      * Sets the value of the 'KOMMUNE_NAVN' field.
      * @param value The value of 'KOMMUNE_NAVN'.
      * @return This builder.
      */
    public Builder setKOMMUNENAVN(CharSequence value) {
      validate(fields()[1], value);
      this.KOMMUNE_NAVN = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'KOMMUNE_NAVN' field has been set.
      * @return True if the 'KOMMUNE_NAVN' field has been set, false otherwise.
      */
    public boolean hasKOMMUNENAVN() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'KOMMUNE_NAVN' field.
      * @return This builder.
      */
    public Builder clearKOMMUNENAVN() {
      KOMMUNE_NAVN = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'KOMMUNE_SOEGENAVN' field.
      * @return The value.
      */
    public CharSequence getKOMMUNESOEGENAVN() {
      return KOMMUNE_SOEGENAVN;
    }

    /**
      * Sets the value of the 'KOMMUNE_SOEGENAVN' field.
      * @param value The value of 'KOMMUNE_SOEGENAVN'.
      * @return This builder.
      */
    public Builder setKOMMUNESOEGENAVN(CharSequence value) {
      validate(fields()[2], value);
      this.KOMMUNE_SOEGENAVN = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'KOMMUNE_SOEGENAVN' field has been set.
      * @return True if the 'KOMMUNE_SOEGENAVN' field has been set, false otherwise.
      */
    public boolean hasKOMMUNESOEGENAVN() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'KOMMUNE_SOEGENAVN' field.
      * @return This builder.
      */
    public Builder clearKOMMUNESOEGENAVN() {
      KOMMUNE_SOEGENAVN = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'FRA_DATO' field.
      * @return The value.
      */
    public CharSequence getFRADATO() {
      return FRA_DATO;
    }

    /**
      * Sets the value of the 'FRA_DATO' field.
      * @param value The value of 'FRA_DATO'.
      * @return This builder.
      */
    public Builder setFRADATO(CharSequence value) {
      validate(fields()[3], value);
      this.FRA_DATO = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'FRA_DATO' field has been set.
      * @return True if the 'FRA_DATO' field has been set, false otherwise.
      */
    public boolean hasFRADATO() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'FRA_DATO' field.
      * @return This builder.
      */
    public Builder clearFRADATO() {
      FRA_DATO = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'UDGAAET_DATO' field.
      * @return The value.
      */
    public CharSequence getUDGAAETDATO() {
      return UDGAAET_DATO;
    }

    /**
      * Sets the value of the 'UDGAAET_DATO' field.
      * @param value The value of 'UDGAAET_DATO'.
      * @return This builder.
      */
    public Builder setUDGAAETDATO(CharSequence value) {
      validate(fields()[4], value);
      this.UDGAAET_DATO = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'UDGAAET_DATO' field has been set.
      * @return True if the 'UDGAAET_DATO' field has been set, false otherwise.
      */
    public boolean hasUDGAAETDATO() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'UDGAAET_DATO' field.
      * @return This builder.
      */
    public Builder clearUDGAAETDATO() {
      UDGAAET_DATO = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    public Data build() {
      try {
        Data record = new Data();
        record.KOMMUNE_KODE = fieldSetFlags()[0] ? this.KOMMUNE_KODE : (CharSequence) defaultValue(fields()[0]);
        record.KOMMUNE_NAVN = fieldSetFlags()[1] ? this.KOMMUNE_NAVN : (CharSequence) defaultValue(fields()[1]);
        record.KOMMUNE_SOEGENAVN = fieldSetFlags()[2] ? this.KOMMUNE_SOEGENAVN : (CharSequence) defaultValue(fields()[2]);
        record.FRA_DATO = fieldSetFlags()[3] ? this.FRA_DATO : (CharSequence) defaultValue(fields()[3]);
        record.UDGAAET_DATO = fieldSetFlags()[4] ? this.UDGAAET_DATO : (CharSequence) defaultValue(fields()[4]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
